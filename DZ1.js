console.log('number' + 3 + 3);
// Результат = 'number33'. Підсумовуються введені числа та додаються до рядка, і отримується рядок 'number33'

console.log(null + 3);
// Результат = '3'. При використанні null + число, null перетворюється на число 0. 
// Значення null + 3 таке саме як було б 0+3, отримується рядок "3"

console.log(5 && "qwerty");
// Результат = 'qwerty'. Два значення правдиві, оператор && повертає значення другого, тому отримується рядок 'qwerty'

console.log(+'40' + +'2' + "hillel");
// Результат ='42hillel'. Так як '+' перетворює рядки на числа. Виходить числове значення 40.
//також рядок 2 перетворюється на число, отримується числове значення 2. 
// Додавання числових значень 40+2 дорівнює 42. Конкатенація з рядком 'hillel': '42' + 'hillel', отримується рядок '42hillel'

console.log('10' - 5 === 6);
// Результат = 'false'. Оператор віднімання перетворює рядок 10 на число, і віднімає 5. 
// Рядок містить дійсне числове представлення, виходить число 5.
// Оператор суворої рівності (===) перевіряє чи значення ліворуч дорівнює значенню праворуч.
// Оскільки 5 не дорівнює 6, результат прикладу хибне, отримується рядок 'false'.

console.log(true + false);
// Результат = '1'. При використанні оператора + із логічним значеннями, значення перетворюються на числа.
// 'true' це 1, а 'false' це 0, отже true + false еквівалентно 1+0, оримується рядок "1".

console.log('4px' - 3); 
// Результат = 'NaN'. Рядок '4px' не можливо перетворити на число.
// Виконання арифметичної операції з нречисловими значеннями призводить до NaN (не число), оримується рядок 'NaN'.

console.log('4' - 3);
// Результат = '1'. Рядок '4' перетворюється на числове значення 4,виконується віднімання.
// При використанні оператора - із рядком, яке є дійсним числовим значенням, рядок перетворюється на число, і виконується віднімання.
// При виконанні 4-3, отримується числове значення та рядок "1".

console.log('6' + 3 ** 0);
// Результат = '61'. При розкладанні виразу маємо, що оператор піднесення до степеня '**' підносить 3 до степеня 0, виходить '1'.
// Рядок '6'обєднується з числовим результатом '1'.
// Освільки один із операндів є рядком, виконується конкатенація рядків, і отримується рядок '61'.

console.log(12 / '6');
// Результат = '2'. При використанні оператору ділення '/' коли '6' це рядок, рядок перетворюється на число перед виконанням ділення.
// Рядок '6' перетворилось на числове значення, виконується ділення '12/6', і отримується рядок '2'.

console.log('10' + (5 === 6));
// Результат = '10false'. При використанні оператору '+' із рядком і логічним значенням, логічне значення перетворюється на рядок перед виконанням конкатенації.
// Оскільки (5 === 6) порівняння хибне (false), бо 5 не дорівнює 6.
// Логічне значення (false) перетворюється на рядок 'false'.
// Конкатенація (об'єднання) даного рядка призводить до отримання рядку '10false'.

console.log(null == '');
// Результат = 'false'. Нуль та порожній рядок ('') не вважаються рівними при використанні оператора вільної рівності (==).
// Маємо результат null=='' отримується рядок 'false'.

console.log(3 ** (9 / 3));
// Результат = '27'. Оператор '**' підносить до степеня. (9 / 3) має значення 3, бо 9 / 3 дорівнює 3.
// (3 **3) означає 3 у ступені 3, що дорівнює значенню 27. і отримується рядок '27'

console.log(!!'false' == !!'true');
// Результат = 'true'. Маємо, що !!'false' це подвійний оператор NOT (!!) використовується для перетворення рядка'false' у відповідне логічне значення.
// Рядок непорожній, він правдивий, !!'false' оцінюється як істина.
// !!'true' подібним чином подвійний оператор NOT (!!), використовується для перетворення рядка 'true'.
// Рядок непорожній, він правдивий, !!'true' оцінюється як true.
// Вираз стає true == true. Обидві сторони оператора рівності є логічними значеннями, відбувається перевірка, чи вони рівні без будь-якого проведення типу.
// Отже, результат виразу є істинним, і отримується рядок 'true'.

console.log(0 || '0' && 1);
// Результат = '1'. Так як 0 || '0' логічний оператор АБО || повертає перше правдиве значення або останнє хибне значення. 
// В даному випадку 0 є хибним, він переходить до наступного операнда.
// Логічний оператор |&& повертає перше хибне або останнє правдиве значення.
// В данному випадку "0" є правдивим, тому він переходить до наступного операнда.
// Кінцевий вираз стає 0||'0' && 1, що еквівалетно 0|| ('0'&& 1).
// При обчисленні внутрішнього виразу '0'&& 1, "0" правдивий. 1 відповідає дійсності.
// Отже, '0'&& 1 обчислюється як 1, вираз стає 0||1, а логічний оператор АБО повертає перше правдиве значення, яке дорівнює 1.
// Результат виразу 0 || '0' && 1 дорівнює 1, і отримується рядок '1'.

console.log((+null == false) < 1);
// Результат = 'false'. Унарний оператор плюса + намагається перетворити null на число.
// Результатом 0, оскільки null розглядається як 0 під час перетворення на число.
// Є порівняння 0 == false. Оператор вільної рівності == виконує приведення типу, оскільки обидві сторони можуть бути приведені до 0, результат істинний.
// Попередній істинний результат порівнюється з числом 1. 
// Під час порівняння логічного значення з числом, логічне значення приводиться до числа, 'true' розглядається як '1'.
// Отже, кінцевий вираз стає 1<1, що є хибним.Отримується рядок 'false'.

console.log(false && true || true);
// Результат = 'true'. Оператори логічного |(&&) і логічного АБО (||) мають коротке замикання.
// Логічний оператор І && повертає перше хибне значення або останнє правдиве значення.
// 'false' є 'false', тому він переходить до наступного операнда.
// Логічний оператор АБО || повертає перше правдиве значення або останнє хибне значення.
// Оскільки перший операнд false, він переходить до наступного операнда.Кінцевий вираз стає хибним || true, що оцінюється як true.
// Отже, результатом даного виразу є правда (true), і отримується рядок 'true'.

console.log(false && (false || true)); 
// Результат = 'false'. Логічний оператор АБО || повертає перше правдиве значення або останнє хибне значення.
// У цьому випадку false є хибним, тому він переходить до наступного операнда, який є істинним. Результат цієї частини вірний.
// Логічний оператор І && повертає перше хибне значення або останнє правдиве значення.
// Так як, перший операнд хибний, результат усього виразу хибний.
// Отже, результатом даного виразу є 'false', і отримується рядок 'false'.

console.log((+null == false) < 1 ** 5);
// Результат = 'false'. Унарний оператор плюса + намагається перетворити null на число, що призводить до 0.
// Оператор вільної рівності == виконує приведення типу, і оскільки обидві сторони можуть бути приведені до 0, результат є істинним.
// (true) < 1 ** 5: результат попереднього порівняння, який є істинним, тепер порівнюється з результатом 1 ** 5. 
// Піднесення до степеня 1 ** 5 дорівнює 1. 
//Таким чином, кінцевий результат виразу (+null == false) < 1 ** 5 є хибний. Отримується рядок 'false'.

